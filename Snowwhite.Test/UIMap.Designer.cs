// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Snowwhite.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckStartUpText - Use 'CheckStartUpTextExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStartUpText()
        {
            #region Variable Declarations
            XamlText uIMirrormirroronthewalText = this.UISnowwhiteWindow.UIMirrormirroronthewalText;
            #endregion

            // Verify that the 'Name' property of 'Mirror mirror on the wall...' label equals 'Mirror mirror on the wall...'
            Assert.AreEqual(this.CheckStartUpTextExpectedValues.UIMirrormirroronthewalTextName, uIMirrormirroronthewalText.Name, "Startup Text not found!");
        }
        
        /// <summary>
        /// Checks if all Dwarfts are loaded
        /// </summary>
        public void DefaultUserScreenShowsDwarfts()
        {
            #region Variable Declarations
            XamlText uIItem105523Text = this.UISnowwhiteWindow.UIItem105523Text;
            XamlText uIFri052017Text = this.UISnowwhiteWindow.UIFri052017Text;
            XamlText uIHelloText = this.UISnowwhiteWindow.UIHelloText;
            XamlList uINewsListList = this.UISnowwhiteWindow.UINewsListList;
            #endregion

            // Verify that the 'Exists' property of '10:55:23' label equals 'True'
            Assert.AreEqual(this.DefaultUserScreenShowsDwarftsExpectedValues.UIItem105523TextExists, uIItem105523Text.Exists, "Current Time is not shown!");

            // Verify that the 'Exists' property of 'Fri, 05. 2017' label equals 'True'
            Assert.AreEqual(this.DefaultUserScreenShowsDwarftsExpectedValues.UIFri052017TextExists, uIFri052017Text.Exists, "Current Date is not shown!");

            // Verify that the 'Exists' property of 'Hello' label equals 'True'
            Assert.AreEqual(this.DefaultUserScreenShowsDwarftsExpectedValues.UIHelloTextExists, uIHelloText.Exists, "Mirror Name is not shown!");

            // Verify that the 'Exists' property of 'NewsList' list box equals 'True'
            Assert.AreEqual(this.DefaultUserScreenShowsDwarftsExpectedValues.UINewsListListExists, uINewsListList.Exists, "News are not shown!");
        }
        
        #region Properties
        public virtual CheckStartUpTextExpectedValues CheckStartUpTextExpectedValues
        {
            get
            {
                if ((this.mCheckStartUpTextExpectedValues == null))
                {
                    this.mCheckStartUpTextExpectedValues = new CheckStartUpTextExpectedValues();
                }
                return this.mCheckStartUpTextExpectedValues;
            }
        }
        
        public virtual DefaultUserScreenShowsDwarftsExpectedValues DefaultUserScreenShowsDwarftsExpectedValues
        {
            get
            {
                if ((this.mDefaultUserScreenShowsDwarftsExpectedValues == null))
                {
                    this.mDefaultUserScreenShowsDwarftsExpectedValues = new DefaultUserScreenShowsDwarftsExpectedValues();
                }
                return this.mDefaultUserScreenShowsDwarftsExpectedValues;
            }
        }
        
        public UISnowwhiteWindow UISnowwhiteWindow
        {
            get
            {
                if ((this.mUISnowwhiteWindow == null))
                {
                    this.mUISnowwhiteWindow = new UISnowwhiteWindow();
                }
                return this.mUISnowwhiteWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckStartUpTextExpectedValues mCheckStartUpTextExpectedValues;
        
        private DefaultUserScreenShowsDwarftsExpectedValues mDefaultUserScreenShowsDwarftsExpectedValues;
        
        private UISnowwhiteWindow mUISnowwhiteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStartUpText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStartUpTextExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Mirror mirror on the wall...' label equals 'Mirror mirror on the wall...'
        /// </summary>
        public string UIMirrormirroronthewalTextName = "Mirror mirror on the wall...";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DefaultUserScreenShowsDwarfts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DefaultUserScreenShowsDwarftsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of '10:55:23' label equals 'True'
        /// </summary>
        public bool UIItem105523TextExists = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'Fri, 05. 2017' label equals 'True'
        /// </summary>
        public bool UIFri052017TextExists = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'Hello' label equals 'True'
        /// </summary>
        public bool UIHelloTextExists = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'NewsList' list box equals 'True'
        /// </summary>
        public bool UINewsListListExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISnowwhiteWindow : XamlWindow
    {
        
        public UISnowwhiteWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "Snowwhite";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("Snowwhite");
            #endregion
        }
        
        #region Properties
        public XamlText UIMirrormirroronthewalText
        {
            get
            {
                if ((this.mUIMirrormirroronthewalText == null))
                {
                    this.mUIMirrormirroronthewalText = new XamlText(this);
                    #region Search Criteria
                    this.mUIMirrormirroronthewalText.SearchProperties[XamlText.PropertyNames.Name] = "Mirror mirror on the wall...";
                    this.mUIMirrormirroronthewalText.WindowTitles.Add("Snowwhite");
                    #endregion
                }
                return this.mUIMirrormirroronthewalText;
            }
        }
        
        public XamlText UIItem105523Text
        {
            get
            {
                if ((this.mUIItem105523Text == null))
                {
                    this.mUIItem105523Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem105523Text.SearchProperties[XamlText.PropertyNames.AutomationId] = "time";
                    this.mUIItem105523Text.WindowTitles.Add("Snowwhite");
                    #endregion
                }
                return this.mUIItem105523Text;
            }
        }
        
        public XamlText UIFri052017Text
        {
            get
            {
                if ((this.mUIFri052017Text == null))
                {
                    this.mUIFri052017Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIFri052017Text.SearchProperties[XamlText.PropertyNames.AutomationId] = "date";
                    this.mUIFri052017Text.WindowTitles.Add("Snowwhite");
                    #endregion
                }
                return this.mUIFri052017Text;
            }
        }
        
        public XamlText UIHelloText
        {
            get
            {
                if ((this.mUIHelloText == null))
                {
                    this.mUIHelloText = new XamlText(this);
                    #region Search Criteria
                    this.mUIHelloText.SearchProperties[XamlText.PropertyNames.AutomationId] = "MirrorName";
                    this.mUIHelloText.WindowTitles.Add("Snowwhite");
                    #endregion
                }
                return this.mUIHelloText;
            }
        }
        
        public UINewsListList UINewsListList
        {
            get
            {
                if ((this.mUINewsListList == null))
                {
                    this.mUINewsListList = new UINewsListList(this);
                }
                return this.mUINewsListList;
            }
        }
        #endregion
        
        #region Fields
        private XamlText mUIMirrormirroronthewalText;
        
        private XamlText mUIItem105523Text;
        
        private XamlText mUIFri052017Text;
        
        private XamlText mUIHelloText;
        
        private UINewsListList mUINewsListList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINewsListList : XamlList
    {
        
        public UINewsListList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "NewsList";
            this.WindowTitles.Add("Snowwhite");
            #endregion
        }
        
        #region Properties
        public XamlListItem UISnowwhiteDwarfLibrarListItem
        {
            get
            {
                if ((this.mUISnowwhiteDwarfLibrarListItem == null))
                {
                    this.mUISnowwhiteDwarfLibrarListItem = new XamlListItem(this);
                    #region Search Criteria
                    this.mUISnowwhiteDwarfLibrarListItem.SearchProperties[XamlListItem.PropertyNames.Name] = "Snowwhite.DwarfLibrary.NewsDwarf.NewsDwarfModel";
                    this.mUISnowwhiteDwarfLibrarListItem.SearchProperties[XamlListItem.PropertyNames.Instance] = "16";
                    this.mUISnowwhiteDwarfLibrarListItem.WindowTitles.Add("Snowwhite");
                    #endregion
                }
                return this.mUISnowwhiteDwarfLibrarListItem;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUISnowwhiteDwarfLibrarListItem;
        #endregion
    }
}
